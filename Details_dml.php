<?php

// Data functions (insert, update, delete, form) for table Details

// This script and data application were generated by AppGini 5.81
// Download AppGini for free from https://bigprof.com/appgini/download/

function Details_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('Details');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['Due_Date'] = $_REQUEST['Due_Date'];
		if($data['Due_Date'] == empty_lookup_value) { $data['Due_Date'] = ''; }
	$data['Domain'] = $_REQUEST['Domain'];
		if($data['Domain'] == empty_lookup_value) { $data['Domain'] = ''; }
	$data['Sub_Domains'] = br2nl($_REQUEST['Sub_Domains']);
	$data['Crazy_Domains'] = $_REQUEST['Crazy_Domains'];
		if($data['Crazy_Domains'] == empty_lookup_value) { $data['Crazy_Domains'] = ''; }
	$data['DNS_Provider'] = $_REQUEST['DNS_Provider'];
		if($data['DNS_Provider'] == empty_lookup_value) { $data['DNS_Provider'] = ''; }
	$data['Yearly_Fee'] = $_REQUEST['Yearly_Fee'];
		if($data['Yearly_Fee'] == empty_lookup_value) { $data['Yearly_Fee'] = ''; }
	$data['Company_Name'] = $_REQUEST['Company_Name'];
		if($data['Company_Name'] == empty_lookup_value) { $data['Company_Name'] = ''; }
	$data['Contact'] = $_REQUEST['Contact'];
		if($data['Contact'] == empty_lookup_value) { $data['Contact'] = ''; }
	$data['Email_Address'] = $_REQUEST['Email_Address'];
		if($data['Email_Address'] == empty_lookup_value) { $data['Email_Address'] = ''; }
	$data['Alternative_Email'] = $_REQUEST['Alternative_Email'];
		if($data['Alternative_Email'] == empty_lookup_value) { $data['Alternative_Email'] = ''; }
	$data['Notes'] = $_REQUEST['Notes'];
		if($data['Notes'] == empty_lookup_value) { $data['Notes'] = ''; }
	if($data['Yearly_Fee'] == '') $data['Yearly_Fee'] = "0.00";

	// hook: Details_before_insert
	if(function_exists('Details_before_insert')) {
		$args = array();
		if(!Details_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('Details', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// hook: Details_after_insert
	if(function_exists('Details_after_insert')) {
		$res = sql("select * from `Details` where `ID`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!Details_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('Details', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) Details_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function Details_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function Details_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('Details');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Details' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Details' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: Details_before_delete
	if(function_exists('Details_before_delete')) {
		$args=array();
		if(!Details_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `Details` where `ID`='$selected_id'", $eo);

	// hook: Details_after_delete
	if(function_exists('Details_after_delete')) {
		$args=array();
		Details_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='Details' and pkValue='$selected_id'", $eo);
}

function Details_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('Details');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Details' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Details' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['Due_Date'] = makeSafe($_REQUEST['Due_Date']);
		if($data['Due_Date'] == empty_lookup_value) { $data['Due_Date'] = ''; }
	$data['Domain'] = makeSafe($_REQUEST['Domain']);
		if($data['Domain'] == empty_lookup_value) { $data['Domain'] = ''; }
	$data['Sub_Domains'] = br2nl(makeSafe($_REQUEST['Sub_Domains']));
	$data['Crazy_Domains'] = makeSafe($_REQUEST['Crazy_Domains']);
		if($data['Crazy_Domains'] == empty_lookup_value) { $data['Crazy_Domains'] = ''; }
	$data['DNS_Provider'] = makeSafe($_REQUEST['DNS_Provider']);
		if($data['DNS_Provider'] == empty_lookup_value) { $data['DNS_Provider'] = ''; }
	$data['Yearly_Fee'] = makeSafe($_REQUEST['Yearly_Fee']);
		if($data['Yearly_Fee'] == empty_lookup_value) { $data['Yearly_Fee'] = ''; }
	$data['Company_Name'] = makeSafe($_REQUEST['Company_Name']);
		if($data['Company_Name'] == empty_lookup_value) { $data['Company_Name'] = ''; }
	$data['Contact'] = makeSafe($_REQUEST['Contact']);
		if($data['Contact'] == empty_lookup_value) { $data['Contact'] = ''; }
	$data['Email_Address'] = makeSafe($_REQUEST['Email_Address']);
		if($data['Email_Address'] == empty_lookup_value) { $data['Email_Address'] = ''; }
	$data['Alternative_Email'] = makeSafe($_REQUEST['Alternative_Email']);
		if($data['Alternative_Email'] == empty_lookup_value) { $data['Alternative_Email'] = ''; }
	$data['Notes'] = makeSafe($_REQUEST['Notes']);
		if($data['Notes'] == empty_lookup_value) { $data['Notes'] = ''; }
	$data['selectedID'] = makeSafe($selected_id);

	// hook: Details_before_update
	if(function_exists('Details_before_update')) {
		$args = array();
		if(!Details_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `Details` set       `Due_Date`=' . (($data['Due_Date'] !== '' && $data['Due_Date'] !== NULL) ? "'{$data['Due_Date']}'" : 'NULL') . ', `Domain`=' . (($data['Domain'] !== '' && $data['Domain'] !== NULL) ? "'{$data['Domain']}'" : 'NULL') . ', `Sub_Domains`=' . (($data['Sub_Domains'] !== '' && $data['Sub_Domains'] !== NULL) ? "'{$data['Sub_Domains']}'" : 'NULL') . ', `Crazy_Domains`=' . (($data['Crazy_Domains'] !== '' && $data['Crazy_Domains'] !== NULL) ? "'{$data['Crazy_Domains']}'" : 'NULL') . ', `DNS_Provider`=' . (($data['DNS_Provider'] !== '' && $data['DNS_Provider'] !== NULL) ? "'{$data['DNS_Provider']}'" : 'NULL') . ', `Yearly_Fee`=' . (($data['Yearly_Fee'] !== '' && $data['Yearly_Fee'] !== NULL) ? "'{$data['Yearly_Fee']}'" : 'NULL') . ', `Company_Name`=' . (($data['Company_Name'] !== '' && $data['Company_Name'] !== NULL) ? "'{$data['Company_Name']}'" : 'NULL') . ', `Contact`=' . (($data['Contact'] !== '' && $data['Contact'] !== NULL) ? "'{$data['Contact']}'" : 'NULL') . ', `Email_Address`=' . (($data['Email_Address'] !== '' && $data['Email_Address'] !== NULL) ? "'{$data['Email_Address']}'" : 'NULL') . ', `Alternative_Email`=' . (($data['Alternative_Email'] !== '' && $data['Alternative_Email'] !== NULL) ? "'{$data['Alternative_Email']}'" : 'NULL') . ', `Notes`=' . (($data['Notes'] !== '' && $data['Notes'] !== NULL) ? "'{$data['Notes']}'" : 'NULL') . " where `ID`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="Details_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: Details_after_update
	if(function_exists('Details_after_update')) {
		$res = sql("SELECT * FROM `Details` WHERE `ID`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['ID'];
		$args = array();
		if(!Details_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='Details' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function Details_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('Details');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: Crazy_Domains
	$combo_Crazy_Domains = new Combo;
	$combo_Crazy_Domains->ListType = 2;
	$combo_Crazy_Domains->MultipleSeparator = ', ';
	$combo_Crazy_Domains->ListBoxHeight = 10;
	$combo_Crazy_Domains->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Details.Crazy_Domains.csv')) {
		$Crazy_Domains_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Details.Crazy_Domains.csv')));
		$combo_Crazy_Domains->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($Crazy_Domains_data)));
		$combo_Crazy_Domains->ListData = $combo_Crazy_Domains->ListItem;
	}else{
		$combo_Crazy_Domains->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Crazy Domains;;Other")));
		$combo_Crazy_Domains->ListData = $combo_Crazy_Domains->ListItem;
	}
	$combo_Crazy_Domains->SelectName = 'Crazy_Domains';
	// combobox: DNS_Provider
	$combo_DNS_Provider = new Combo;
	$combo_DNS_Provider->ListType = 2;
	$combo_DNS_Provider->MultipleSeparator = ', ';
	$combo_DNS_Provider->ListBoxHeight = 10;
	$combo_DNS_Provider->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Details.DNS_Provider.csv')) {
		$DNS_Provider_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Details.DNS_Provider.csv')));
		$combo_DNS_Provider->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($DNS_Provider_data)));
		$combo_DNS_Provider->ListData = $combo_DNS_Provider->ListItem;
	}else{
		$combo_DNS_Provider->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("oz4host;;DNS Made Easy;;Other")));
		$combo_DNS_Provider->ListData = $combo_DNS_Provider->ListItem;
	}
	$combo_DNS_Provider->SelectName = 'DNS_Provider';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Details' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Details' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `Details` WHERE `ID`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'Details_view.php', false);
		}
		$combo_Crazy_Domains->SelectedData = $row['Crazy_Domains'];
		$combo_DNS_Provider->SelectedData = $row['DNS_Provider'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_Crazy_Domains->SelectedText = ( $_REQUEST['FilterField'][1]=='5' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_DNS_Provider->SelectedText = ( $_REQUEST['FilterField'][1]=='6' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_Crazy_Domains->Render();
	$combo_DNS_Provider->Render();

	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/Details_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/Details_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return Details_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return Details_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return Details_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#Due_Date').replaceWith('<div class=\"form-control-static\" id=\"Due_Date\">' + (jQuery('#Due_Date').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Domain').replaceWith('<div class=\"form-control-static\" id=\"Domain\">' + (jQuery('#Domain').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Sub_Domains').replaceWith('<div class=\"form-control-static\" id=\"Sub_Domains\">' + (jQuery('#Sub_Domains').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=Crazy_Domains]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=Crazy_Domains]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=DNS_Provider]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=DNS_Provider]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#Yearly_Fee').replaceWith('<div class=\"form-control-static\" id=\"Yearly_Fee\">' + (jQuery('#Yearly_Fee').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Company_Name').replaceWith('<div class=\"form-control-static\" id=\"Company_Name\">' + (jQuery('#Company_Name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Contact').replaceWith('<div class=\"form-control-static\" id=\"Contact\">' + (jQuery('#Contact').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Email_Address').replaceWith('<div class=\"form-control-static\" id=\"Email_Address\">' + (jQuery('#Email_Address').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Alternative_Email').replaceWith('<div class=\"form-control-static\" id=\"Alternative_Email\">' + (jQuery('#Alternative_Email').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(Crazy_Domains)%%>', $combo_Crazy_Domains->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Crazy_Domains)%%>', $combo_Crazy_Domains->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(DNS_Provider)%%>', $combo_DNS_Provider->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(DNS_Provider)%%>', $combo_DNS_Provider->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(ID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Due_Date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Domain)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Sub_Domains)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Crazy_Domains)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(DNS_Provider)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Yearly_Fee)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Company_Name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Contact)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Email_Address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Alternative_Email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Notes)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ID)%%>', safe_html($urow['ID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ID)%%>', html_attr($row['ID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ID)%%>', urlencode($urow['ID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Due_Date)%%>', safe_html($urow['Due_Date']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Due_Date)%%>', html_attr($row['Due_Date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Due_Date)%%>', urlencode($urow['Due_Date']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Domain)%%>', safe_html($urow['Domain']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Domain)%%>', html_attr($row['Domain']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Domain)%%>', urlencode($urow['Domain']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)) {
			$templateCode = str_replace('<%%VALUE(Sub_Domains)%%>', safe_html($urow['Sub_Domains']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(Sub_Domains)%%>', html_attr($row['Sub_Domains']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(Sub_Domains)%%>', urlencode($urow['Sub_Domains']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Crazy_Domains)%%>', safe_html($urow['Crazy_Domains']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Crazy_Domains)%%>', html_attr($row['Crazy_Domains']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Crazy_Domains)%%>', urlencode($urow['Crazy_Domains']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(DNS_Provider)%%>', safe_html($urow['DNS_Provider']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(DNS_Provider)%%>', html_attr($row['DNS_Provider']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DNS_Provider)%%>', urlencode($urow['DNS_Provider']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Yearly_Fee)%%>', safe_html($urow['Yearly_Fee']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Yearly_Fee)%%>', html_attr($row['Yearly_Fee']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Yearly_Fee)%%>', urlencode($urow['Yearly_Fee']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Company_Name)%%>', safe_html($urow['Company_Name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Company_Name)%%>', html_attr($row['Company_Name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Company_Name)%%>', urlencode($urow['Company_Name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Contact)%%>', safe_html($urow['Contact']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Contact)%%>', html_attr($row['Contact']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Contact)%%>', urlencode($urow['Contact']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Email_Address)%%>', safe_html($urow['Email_Address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Email_Address)%%>', html_attr($row['Email_Address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Email_Address)%%>', urlencode($urow['Email_Address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Alternative_Email)%%>', safe_html($urow['Alternative_Email']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Alternative_Email)%%>', html_attr($row['Alternative_Email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Alternative_Email)%%>', urlencode($urow['Alternative_Email']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(Notes)%%>', '<textarea name="Notes" id="Notes" rows="5">' . html_attr($row['Notes']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(Notes)%%>', '<div id="Notes" class="form-control-static">' . $row['Notes'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(Notes)%%>', nl2br($row['Notes']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Notes)%%>', urlencode($urow['Notes']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(ID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Due_Date)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Due_Date)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Domain)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Domain)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Sub_Domains)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Sub_Domains)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Crazy_Domains)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Crazy_Domains)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(DNS_Provider)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DNS_Provider)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Yearly_Fee)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Yearly_Fee)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(Company_Name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Company_Name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Contact)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Contact)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Email_Address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Email_Address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Alternative_Email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Alternative_Email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(Notes)%%>', '<textarea name="Notes" id="Notes" rows="5"></textarea>', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('Details');
	if($selected_id) {
		$jdata = get_joined_record('Details', $selected_id);
		if($jdata === false) $jdata = get_defaults('Details');
		$rdata = $row;
	}
	$templateCode .= loadView('Details-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: Details_dv
	if(function_exists('Details_dv')) {
		$args=array();
		Details_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>